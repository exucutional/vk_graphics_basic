#version 430

layout( local_size_x = 32 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer Res
{
    float res[];
};

void main() 
{
    uint idx = gl_GlobalInvocationID.x;
    if (idx < PushConstant.len)
    {
        uint window = 7;
        uint offset = window/2;
        float sum = 0.;
        uint begin = 0;
        uint end = window;
        if (idx < offset)
        {
            begin = offset-idx;
        }
        if (idx > PushConstant.len-1-offset)
        {
            end -= idx+offset-PushConstant.len-1;
        }
        for (uint i = begin; i < end; i++)
        {
            sum += A[idx+i-offset];
        }
        res[idx] = A[idx]-sum/window;
    }
}
