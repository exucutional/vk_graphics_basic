#version 430

layout( local_size_x = 32 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer Res
{
    float res[];
};

shared float[38] buff;

void main() 
{
    uint idx = gl_GlobalInvocationID.x;
    if (idx < PushConstant.len)
    {
        uint lidx = gl_LocalInvocationID.x;
        uint wgidx = gl_WorkGroupID.x;
        uint wgsize = gl_WorkGroupSize.x;
        uint window = 7;
        uint offset = window/2;
        float sum = 0.;
        buff[lidx+offset] = A[idx];
        for (uint i = 0; i < offset; i++)
        {
            if (idx-offset+i < 0)
            {
                buff[i] = 0;
            }
            else
            {
                buff[i] = A[wgidx*wgsize-offset+i];
            }
            if (idx+i+1 > PushConstant.len-1)
            {
                buff[wgsize+offset+i] = 0;
            }
            else
            {
                buff[wgsize+offset+i] = A[(wgidx+1)*wgsize+i];
            }
        }
        barrier();
        for (uint i = 0; i < window; i++)
        {
            sum += buff[lidx+i];
        }
        res[idx] = buff[lidx+offset]-sum/window;
    }
}
