#version 430

layout( local_size_x = 32 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer Res
{
    float res[];
};

shared float[38] buff;

void main() 
{
    uint idx = gl_GlobalInvocationID.x;
    uint lidx = gl_LocalInvocationID.x;
    uint wgidx = gl_WorkGroupID.x;
    uint wgsize = gl_WorkGroupSize.x;
    uint window = 7;
    uint offset = window/2;
    float sum = 0.;
    buff[lidx+3] = A[idx];
    buff[0] = A[wgidx*wgsize-3];
    buff[1] = A[wgidx*wgsize-2];
    buff[2] = A[wgidx*wgsize-1];
    buff[35] = A[(wgidx+1)*wgsize];
    buff[36] = A[(wgidx+1)*wgsize+1];
    buff[37] = A[(wgidx+1)*wgsize+2];
    barrier();
    for (uint i = 0; i < window; i++)
    {
        uint index = lidx+i-offset+3;
        sum += buff[index];
    }
    res[idx] = buff[lidx+3]-sum/window;
}
