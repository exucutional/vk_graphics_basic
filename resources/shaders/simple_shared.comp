#version 430

layout( local_size_x = 32 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer Res
{
    float res[];
};

shared float[32] buff;

void main() 
{
    uint idx = gl_GlobalInvocationID.x;
    uint lidx = gl_LocalInvocationID.x;
    uint window = 7;
    uint offset = window/2;
    float sum = 0.;
    buff[lidx] = A[idx];
    barrier();
    for (uint i = 0; i < window; i++)
    {
        uint index = lidx+i-offset;
        if (index >= 0 && index < 32)
            sum += buff[index];
        else
            sum += A[idx+i-offset];
    }
    res[idx] = buff[lidx]-sum/window;
}
